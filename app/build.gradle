/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.build['compileSdkVersion']

    defaultConfig {
        applicationId "mozilla.fenix"

        minSdkVersion rootProject.ext.build['minSdkVersion']
        targetSdkVersion rootProject.ext.build['targetSdkVersion']
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        lintConfig file("${rootDir}/config/lint.xml")
    }

    flavorDimensions "abi"

    productFlavors {
        x86 {
            dimension "abi"
        }

        arm {
            dimension "abi"
        }

        aarch64 {
            dimension "abi"
        }
    }
}

repositories {
    // GeckoView ARM
    maven {
        url "https://index.taskcluster.net/v1/task/gecko.v2.mozilla-central.nightly.${rootProject.ext.gecko['nightlyDate']}.revision.${rootProject.ext.gecko['revision']}.mobile.android-api-16-opt/artifacts/public/android/maven"
    }

    // GeckoView x86
    maven {
        url "https://index.taskcluster.net/v1/task/gecko.v2.mozilla-central.nightly.${rootProject.ext.gecko['nightlyDate']}.revision.${rootProject.ext.gecko['revision']}.mobile.android-x86-opt/artifacts/public/android/maven"
    }

    // GeckoView aarch64
    maven {
        url "https://index.taskcluster.net/v1/task/gecko.v2.mozilla-central.nightly.${rootProject.ext.gecko['nightlyDate']}.revision.${rootProject.ext.gecko['revision']}.mobile.android-aarch64-opt/artifacts/public/android/maven"
    }
}

dependencies {
    implementation "io.sentry:sentry-android:${rootProject.ext.dependencies['sentry']}"

    implementation "org.mozilla.components:engine:${rootProject.ext.dependencies['mozillaComponents']}"
    implementation "org.mozilla.components:engine-gecko:${rootProject.ext.dependencies['mozillaComponents']}"
    implementation "org.mozilla.components:session:${rootProject.ext.dependencies['mozillaComponents']}"
    implementation "org.mozilla.components:abstract-toolbar:${rootProject.ext.dependencies['mozillaComponents']}"
    implementation "org.mozilla.components:toolbar:${rootProject.ext.dependencies['mozillaComponents']}"
    implementation "org.mozilla.components:feature-session:${rootProject.ext.dependencies['mozillaComponents']}"
    implementation "org.mozilla.components:feature-toolbar:${rootProject.ext.dependencies['mozillaComponents']}"
    implementation "org.mozilla.components:ktx:${rootProject.ext.dependencies['mozillaComponents']}"

    armImplementation "org.mozilla:geckoview-nightly-armeabi-v7a:${rootProject.ext.gecko['version']}"
    x86Implementation "org.mozilla:geckoview-nightly-x86:${rootProject.ext.gecko['version']}"
    aarch64Implementation "org.mozilla:geckoview-nightly-arm64-v8a:${rootProject.ext.gecko['version']}"

    implementation "com.android.support:appcompat-v7:${rootProject.ext.dependencies['supportLibraries']}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${rootProject.ext.dependencies['kotlin']}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.ext.dependencies['constraintLayout']}"

    testImplementation "junit:junit:${rootProject.ext.dependencies['junit']}"

}

// -------------------------------------------------------------------------------------------------
// -- Sentry
// -------------------------------------------------------------------------------------------------

android.applicationVariants.all {
    try {
        def token = new File("${rootDir}/.sentry").text.trim()
        buildConfigField 'String', 'SENTRY_TOKEN', '"' + token + '"'
    } catch (FileNotFoundException ignored) {
        buildConfigField 'String', 'SENTRY_TOKEN', 'null'
    }
}
